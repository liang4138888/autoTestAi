<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.automation.mapper.ApiTestMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.api.automation.model.ApiTest">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="enabled" property="enabled" jdbcType="BIT" />
        <result column="error_message" property="errorMessage" jdbcType="VARCHAR" />
        <result column="execution_time" property="executionTime" jdbcType="BIGINT" />
        <result column="last_run_time" property="lastRunTime" jdbcType="TIMESTAMP" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="response_code" property="responseCode" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="VARCHAR" />
        <result column="module" property="module" jdbcType="VARCHAR" />
        <result column="curl_command" property="curlCommand" jdbcType="LONGVARCHAR" />
        <result column="result" property="result" jdbcType="LONGVARCHAR" />
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, create_time, description, enabled, error_message, execution_time, last_run_time,
    name, response_code, status, module
    </sql>

    <!-- 根据状态查询API测试列表 -->
    <select id="selectByStatus" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM api_test
        WHERE status = #{status}
        ORDER BY last_run_time DESC
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="selectByNameLike" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM api_test
        WHERE name LIKE CONCAT('%', #{name}, '%')
        ORDER BY created_time DESC
    </select>

    <!-- 查询最近执行的API测试 -->
    <select id="selectRecentlyExecuted" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM api_test
        WHERE last_run_time IS NOT NULL
        ORDER BY last_run_time DESC
        LIMIT #{limit}
    </select>

    <!-- 查询执行时间超过指定阈值的API测试 -->
    <select id="selectByExecutionTimeThreshold" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM api_test
        WHERE execution_time > #{threshold}
        ORDER BY execution_time DESC
    </select>

    <!-- 统计各状态的API测试数量 -->
    <select id="countByStatus" resultType="java.util.Map">
        SELECT
            status,
            COUNT(*) as count
        FROM api_test
        GROUP BY status
    </select>

    <!-- 查询指定时间范围内执行的API测试 -->
    <select id="selectByTimeRange" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM api_test
        WHERE last_run_time BETWEEN #{startTime} AND #{endTime}
        ORDER BY last_run_time DESC
    </select>

    <!-- 查询成功率低于指定值的API测试 -->
    <select id="selectByLowSuccessRate" resultMap="BaseResultMap">
        SELECT
            t1.*
        FROM api_test t1
        LEFT JOIN (
            SELECT
                test_id,
                COUNT(*) as total_count,
                SUM(CASE WHEN status = 'SUCCESS' THEN 1 ELSE 0 END) as success_count
            FROM api_test_record
            GROUP BY test_id
        ) t2 ON t1.id = t2.test_id
        WHERE t2.total_count IS NULL
           OR t2.total_count = 0
           OR (t2.success_count * 100.0 / t2.total_count) &lt; #{successRate}
        ORDER BY t1.created_time DESC
    </select>

    <!-- 批量更新API测试状态 -->
    <update id="batchUpdateStatus">
        UPDATE api_test
        SET status = #{status}, updated_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 查询执行次数最多的API测试 -->
    <select id="selectMostExecuted" resultMap="BaseResultMap">
        SELECT
            t1.*,
            COUNT(t2.id) as execution_count
        FROM api_test t1
        LEFT JOIN api_test_record t2 ON t1.id = t2.test_id
        GROUP BY t1.id
        ORDER BY execution_count DESC
        LIMIT #{limit}
    </select>

    <!-- 查询平均执行时间最长的API测试 -->
    <select id="selectSlowestApiTests" resultMap="BaseResultMap">
        SELECT
            t1.*,
            AVG(t2.execution_time) as avg_execution_time
        FROM api_test t1
        LEFT JOIN api_test_record t2 ON t1.id = t2.test_id
        WHERE t2.execution_time IS NOT NULL
        GROUP BY t1.id
        ORDER BY avg_execution_time DESC
        LIMIT #{limit}
    </select>

    <!-- 根据描述关键词查询 -->
    <select id="selectByDescriptionKeyword" resultMap="BaseResultMap">
        SELECT * FROM api_test
        WHERE description LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY created_time DESC
    </select>

    <!-- 分页查询API测试（支持筛选和排序） -->
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT * FROM api_test
        <where>
            <if test="params.search != null and params.search != ''">
                AND (name LIKE CONCAT('%', #{params.search}, '%')
                OR description LIKE CONCAT('%', #{params.search}, '%'))
            </if>
            <if test="params.status != null and params.status != ''">
                AND status = #{params.status}
            </if>
            <if test="params.module != null and params.module != ''">
                AND module = #{params.module}
            </if>
        </where>
        <choose>
            <when test="params.sortBy == 'name'">
                ORDER BY name
                <if test="params.sortOrder == 'desc'">DESC</if>
                <if test="params.sortOrder == 'asc'">ASC</if>
            </when>
            <when test="params.sortBy == 'status'">
                ORDER BY status
                <if test="params.sortOrder == 'desc'">DESC</if>
                <if test="params.sortOrder == 'asc'">ASC</if>
            </when>
            <when test="params.sortBy == 'lastRunTime'">
                ORDER BY last_run_time
                <if test="params.sortOrder == 'desc'">DESC</if>
                <if test="params.sortOrder == 'asc'">ASC</if>
            </when>
            <when test="params.sortBy == 'executionTime'">
                ORDER BY execution_time
                <if test="params.sortOrder == 'desc'">DESC</if>
                <if test="params.sortOrder == 'asc'">ASC</if>
            </when>
            <otherwise>
                ORDER BY created_time DESC
            </otherwise>
        </choose>
        LIMIT #{params.size} OFFSET #{params.offset}
    </select>

    <!-- 分页查询总数（支持筛选） -->
    <select id="selectCountByPage" resultType="int">
        SELECT COUNT(*) FROM api_test
        <where>
            <if test="params.search != null and params.search != ''">
                AND (name LIKE CONCAT('%', #{params.search}, '%')
                OR description LIKE CONCAT('%', #{params.search}, '%'))
            </if>
            <if test="params.status != null and params.status != ''">
                AND status = #{params.status}
            </if>
            <if test="params.module != null and params.module != ''">
                AND module = #{params.module}
            </if>
        </where>
    </select>

</mapper>
